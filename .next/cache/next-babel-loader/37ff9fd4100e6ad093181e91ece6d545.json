{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NextProjects\\\\NewOne\\\\pages\\\\Content.tsx\";\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\n\nfunction Page({\n  posts\n}) {\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: postPerPage,\n    1: setPostPerPage\n  } = useState(7);\n  const totalPost = posts.length;\n  const indexoflastpost = currentPage * postPerPage;\n  console.log(indexoflastpost);\n  const indexoffirstpost = indexoflastpost - postPerPage;\n  console.log(indexoffirstpost);\n  const pageNum = [];\n  const currentPost = posts.slice(indexoffirstpost, indexoflastpost);\n  console.log(currentPost);\n  const totalPos = Math.ceil(totalPost / postPerPage);\n\n  for (let i = 1; i <= totalPos; i++) {\n    pageNum.push(i);\n  }\n\n  const page = pageNum => setCurrentPage(pageNum);\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-none \",\n      children: currentPost.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [post.id, \" \\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/Post/[id]\",\n          as: `/Post/${post.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"cursor-pointer text-blue-500\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"w3-bar \",\n      children: pageNum.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cursor-pointer w3-bar-item w3-border w3-hover-green\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => page(post),\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 111\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n}\n\nexport async function getServerSideProps() {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const posts = await res.json();\n  console.log(\"yes\");\n  const ln = posts.lenght;\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default Page;","map":{"version":3,"sources":["C:/NextProjects/NewOne/pages/Content.tsx"],"names":["React","useState","Link","Layout","Page","posts","currentPage","setCurrentPage","postPerPage","setPostPerPage","totalPost","length","indexoflastpost","console","log","indexoffirstpost","pageNum","currentPost","slice","totalPos","Math","ceil","i","push","page","map","post","id","title","getServerSideProps","res","fetch","json","ln","lenght","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAsCC,QAAtC,QAAsD,OAAtD;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAQA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAgC;AAE5B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAeC;AAAf,MAAiCN,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM;AAAA,OAACO,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAMS,SAAS,GAAGL,KAAK,CAACM,MAAxB;AAGA,QAAMC,eAAe,GAAGN,WAAW,GAAGE,WAAtC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACA,QAAMG,gBAAgB,GAAGH,eAAe,GAAGJ,WAA3C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AAEA,QAAMC,OAAO,GAAE,EAAf;AACA,QAAMC,WAAW,GAAGZ,KAAK,CAACa,KAAN,CAAYH,gBAAZ,EAA+BH,eAA/B,CAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AAEA,QAAME,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAWX,SAAS,GAAGF,WAAvB,CAAjB;;AAEA,OAAI,IAAIc,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAIH,QAAnB,EAA6BG,CAAC,EAA9B,EAAiC;AAC7BN,IAAAA,OAAO,CAACO,IAAR,CAAaD,CAAb;AAGH;;AAED,QAAME,IAAI,GAAIR,OAAD,IAAiBT,cAAc,CAACS,OAAD,CAA5C;;AAEA,sBAEQ,QAAC,MAAD;AAAA,4BACN;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACGC,WAAW,CAACQ,GAAZ,CAAiBC,IAAD,iBAChB;AAAA,mBAAKA,IAAI,CAACC,EAAV,6BAA2B,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,YAAX;AAAwB,UAAA,EAAE,EAAG,SAAQD,IAAI,CAACC,EAAG,EAA7C;AAAA,iCAAgD;AAAG,YAAA,SAAS,EAAC,8BAAb;AAAA,sBAA6CD,IAAI,CAACE;AAAlD;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AADH;AAAA;AAAA;AAAA;AAAA,YADM,eAON;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,gBACCZ,OAAO,CAACS,GAAR,CAAaC,IAAD,iBAET;AAAI,QAAA,SAAS,EAAC,qDAAd;AAAA,+BAAqE;AAAG,UAAA,OAAO,EAAE,MAAMF,IAAI,CAACE,IAAD,CAAtB;AAAA,iCAA+B;AAAA,sBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA;AAArE;AAAA;AAAA;AAAA;AAAA,cAFH;AADD;AAAA;AAAA;AAAA;AAAA,YAPM;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAuBD;;AAGD,OAAO,eAAeG,kBAAf,GAAoC;AAIzC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAM1B,KAAK,GAAG,MAAMyB,GAAG,CAACE,IAAJ,EAApB;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEA,QAAMmB,EAAE,GAAG5B,KAAK,CAAC6B,MAAjB;AAMA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL9B,MAAAA;AADK;AADF,GAAP;AAMD;AAED,eAAeD,IAAf","sourcesContent":["import React, { ReactNode, useEffect, useState } from 'react';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport Layout from '../components/Layout';\r\n\r\ninterface IProps {\r\n    children: ReactNode;\r\n    // any other props that come into the component\r\n    posts: any\r\n  }\r\n\r\nfunction Page({posts} : IProps) {\r\n\r\n    const [currentPage , setCurrentPage] = useState(1);\r\n    const [postPerPage, setPostPerPage] = useState(7);\r\n    const totalPost = posts.length;\r\n    \r\n    \r\n    const indexoflastpost = currentPage * postPerPage;\r\n    console.log(indexoflastpost);\r\n    const indexoffirstpost = indexoflastpost - postPerPage;\r\n    console.log(indexoffirstpost);\r\n\r\n    const pageNum =[];\r\n    const currentPost = posts.slice(indexoffirstpost , indexoflastpost);\r\n\r\n    console.log(currentPost);\r\n\r\n    const totalPos = Math.ceil( totalPost / postPerPage);\r\n   \r\n    for(let i= 1; i <= totalPos; i++){\r\n        pageNum.push(i);\r\n\r\n        \r\n    }\r\n\r\n    const page = (pageNum:any) => setCurrentPage(pageNum)\r\n    \r\n    return (\r\n    \r\n            <Layout>\r\n      <ul className=\"list-none \">\r\n        {currentPost.map((post :any) => (\r\n         <li>{post.id} &nbsp;&nbsp; <Link href=\"/Post/[id]\" as={`/Post/${post.id}`}><b className=\"cursor-pointer text-blue-500\">{post.title}</b></Link></li>\r\n        ))}\r\n      </ul>\r\n\r\n      <ul className=\"w3-bar \">\r\n      {pageNum.map((post :any) => (\r\n          \r\n          <li className=\"cursor-pointer w3-bar-item w3-border w3-hover-green\" ><a onClick={() => page(post)} ><b>{post}</b></a></li>\r\n          \r\n       \r\n        ))}\r\n         </ul>\r\n      \r\n      \r\n      \r\n         </Layout>\r\n      \r\n    )\r\n  }\r\n  \r\n \r\n  export async function getServerSideProps() {\r\n    \r\n\r\n    \r\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n    const posts = await res.json()\r\n    console.log(\"yes\");\r\n\r\n    const ln = posts.lenght;\r\n\r\n    \r\n\r\n    \r\n  \r\n    return {\r\n      props: {\r\n        posts,\r\n        \r\n      },\r\n    }\r\n  }\r\n  \r\n  export default Page;"]},"metadata":{},"sourceType":"module"}