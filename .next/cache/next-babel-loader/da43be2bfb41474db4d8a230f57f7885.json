{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\NextProjects\\\\NewOne\\\\pages\\\\Content.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\n\nfunction Page(_ref) {\n  _s();\n\n  var _this = this;\n\n  var posts = _ref.posts;\n\n  var _useState = useState(1),\n      currentPage = _useState[0],\n      setCurrentPage = _useState[1];\n\n  var _useState2 = useState(7),\n      postPerPage = _useState2[0],\n      setPostPerPage = _useState2[1];\n\n  var totalPost = posts.length;\n  var indexoflastpost = currentPage * postPerPage;\n  console.log(indexoflastpost);\n  var indexoffirstpost = indexoflastpost - postPerPage;\n  console.log(indexoffirstpost);\n  var pageNum = [];\n  var currentPost = posts.slice(indexoffirstpost, indexoflastpost);\n  console.log(currentPost);\n  var totalPos = Math.ceil(totalPost / postPerPage);\n\n  for (var i = 1; i <= totalPos; i++) {\n    pageNum.push(i);\n  }\n\n  var page = function page(pageNum) {\n    return setCurrentPage(pageNum);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Posts List API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w3-container w3-padding w3-margin\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-none \",\n        children: currentPost.map(function (post) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [post.id, \" \\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/Post/[id]\",\n              as: \"/Post/\".concat(post.title),\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"cursor-pointer text-blue-500\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 88\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 10\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"w3-bar \",\n        children: pageNum.map(function (post) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"cursor-pointer mt-10 w3-bar-item w3-border w3-hover-green\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: function onClick() {\n                return page(post);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: post\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 117\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 86\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Page, \"4soNna09haHtcQnR9yPVeQUZxHs=\");\n\n_c = Page;\nexport var __N_SSP = true;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/NextProjects/NewOne/pages/Content.tsx"],"names":["React","useState","Head","Link","Layout","Page","posts","currentPage","setCurrentPage","postPerPage","setPostPerPage","totalPost","length","indexoflastpost","console","log","indexoffirstpost","pageNum","currentPost","slice","totalPos","Math","ceil","i","push","page","map","post","id","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAQA,SAASC,IAAT,OAAgC;AAAA;;AAAA;;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;;AAAA,kBAEWL,QAAQ,CAAC,CAAD,CAFnB;AAAA,MAErBM,WAFqB;AAAA,MAEPC,cAFO;;AAAA,mBAGUP,QAAQ,CAAC,CAAD,CAHlB;AAAA,MAGrBQ,WAHqB;AAAA,MAGRC,cAHQ;;AAI5B,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAxB;AAGA,MAAMC,eAAe,GAAGN,WAAW,GAAGE,WAAtC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACA,MAAMG,gBAAgB,GAAGH,eAAe,GAAGJ,WAA3C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AAEA,MAAMC,OAAO,GAAE,EAAf;AACA,MAAMC,WAAW,GAAGZ,KAAK,CAACa,KAAN,CAAYH,gBAAZ,EAA+BH,eAA/B,CAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AAEA,MAAME,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAWX,SAAS,GAAGF,WAAvB,CAAjB;;AAEA,OAAI,IAAIc,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAIH,QAAnB,EAA6BG,CAAC,EAA9B,EAAiC;AAC7BN,IAAAA,OAAO,CAACO,IAAR,CAAaD,CAAb;AAGH;;AAED,MAAME,IAAI,GAAG,SAAPA,IAAO,CAACR,OAAD;AAAA,WAAiBT,cAAc,CAACS,OAAD,CAA/B;AAAA,GAAb;;AAEA,sBAEQ,QAAC,MAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAMI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,8BACV;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGC,WAAW,CAACQ,GAAZ,CAAgB,UAACC,IAAD;AAAA,8BAChB;AAAA,uBAAKA,IAAI,CAACC,EAAV,6BAA2B,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,YAAX;AAAwB,cAAA,EAAE,kBAAWD,IAAI,CAACE,KAAhB,CAA1B;AAAA,qCAAmD;AAAG,gBAAA,SAAS,EAAC,8BAAb;AAAA,0BAA6CF,IAAI,CAACE;AAAlD;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,mBADgB;AAAA,SAAhB;AADH;AAAA;AAAA;AAAA;AAAA,cADU,eAOV;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,kBACCZ,OAAO,CAACS,GAAR,CAAY,UAACC,IAAD;AAAA,8BAET;AAAI,YAAA,SAAS,EAAC,2DAAd;AAAA,mCAA2E;AAAG,cAAA,OAAO,EAAE;AAAA,uBAAMF,IAAI,CAACE,IAAD,CAAV;AAAA,eAAZ;AAAA,qCAA+B;AAAA,0BAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA;AAA3E;AAAA;AAAA;AAAA;AAAA,mBAFS;AAAA,SAAZ;AADD;AAAA;AAAA;AAAA;AAAA,cAPU;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AA6BD;;GAxDMtB,I;;KAAAA,I;;AAiFP,eAAeA,IAAf","sourcesContent":["import React, { ReactNode, useEffect, useState } from 'react';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport Layout from '../components/Layout';\r\n\r\ninterface IProps {\r\n    children: ReactNode;\r\n    // any other props that come into the component\r\n    posts: any\r\n  }\r\n\r\nfunction Page({posts} : IProps) {\r\n\r\n    const [currentPage , setCurrentPage] = useState(1);\r\n    const [postPerPage, setPostPerPage] = useState(7);\r\n    const totalPost = posts.length;\r\n    \r\n    \r\n    const indexoflastpost = currentPage * postPerPage;\r\n    console.log(indexoflastpost);\r\n    const indexoffirstpost = indexoflastpost - postPerPage;\r\n    console.log(indexoffirstpost);\r\n\r\n    const pageNum =[];\r\n    const currentPost = posts.slice(indexoffirstpost , indexoflastpost);\r\n\r\n    console.log(currentPost);\r\n\r\n    const totalPos = Math.ceil( totalPost / postPerPage);\r\n   \r\n    for(let i= 1; i <= totalPos; i++){\r\n        pageNum.push(i);\r\n\r\n        \r\n    }\r\n\r\n    const page = (pageNum:any) => setCurrentPage(pageNum)\r\n    \r\n    return (\r\n    \r\n            <Layout>\r\n              <Head>\r\n                <title>\r\n                  Posts List API\r\n                </title>\r\n              </Head>\r\n                <div className=\"w3-container w3-padding w3-margin\">\r\n      <ul className=\"list-none \">\r\n        {currentPost.map((post :any) => (\r\n         <li>{post.id} &nbsp;&nbsp; <Link href=\"/Post/[id]\" as={`/Post/${post.title}`}><b className=\"cursor-pointer text-blue-500\">{post.title}</b></Link></li>\r\n        ))}\r\n      </ul>\r\n\r\n      <ul className=\"w3-bar \">\r\n      {pageNum.map((post :any) => (\r\n          \r\n          <li className=\"cursor-pointer mt-10 w3-bar-item w3-border w3-hover-green\" ><a onClick={() => page(post)} ><b>{post}</b></a></li>\r\n          \r\n       \r\n        ))}\r\n         </ul>\r\n      \r\n         </div>\r\n      \r\n         </Layout>\r\n      \r\n    )\r\n  }\r\n  \r\n \r\n  export async function getServerSideProps() {\r\n    \r\n\r\n    \r\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n    const posts = await res.json()\r\n    console.log(\"yes\");\r\n\r\n    const ln = posts.lenght;\r\n\r\n    \r\n\r\n    \r\n  \r\n    return {\r\n      props: {\r\n        posts,\r\n        \r\n      },\r\n    }\r\n  }\r\n  \r\n  export default Page;"]},"metadata":{},"sourceType":"module"}