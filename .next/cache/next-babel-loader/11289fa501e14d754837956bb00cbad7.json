{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NextProjects\\\\NewOne\\\\pages\\\\Post\\\\[id].tsx\";\nimport React from 'react';\nimport Head from 'next/head';\nimport 'isomorphic-unfetch';\nimport getConfig from 'next/config';\n\nfunction Id({\n  posts\n}) {\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"posts.title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container   m-10 p-10\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ul list-disc list-inside\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl mb-5\",\n          children: \"Post Body Details: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Post Number : \", posts.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Post Title : \", posts.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Post Body : \", posts.body]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" User: \", posts.userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\nconst {\n  publicRuntimeConfig\n} = getConfig();\nexport async function getServerSideProps(context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`);\n  const posts = await res.json();\n  console.log({\n    id\n  });\n  const ln = posts.lenght;\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default Id;","map":{"version":3,"sources":["C:/NextProjects/NewOne/pages/Post/[id].tsx"],"names":["React","Head","getConfig","Id","posts","console","log","id","title","body","userId","publicRuntimeConfig","getServerSideProps","context","query","res","fetch","json","ln","lenght","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAQA,SAASC,EAAT,CAAY;AAACC,EAAAA;AAAD,CAAZ,EAA8B;AAG9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAGI,sBACI;AAAA,4BAEA,QAAC,IAAD;AAAA,6BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACF;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA,gCAEF;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFE,eAGD;AAAA,iCAAG;AAAA,0CAAmBA,KAAK,CAACG,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAHC,eAID;AAAA,iCAAG;AAAA,yCAAkBH,KAAK,CAACI,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAJC,eAKD;AAAA,iCAAG;AAAA,wCAAiBJ,KAAK,CAACK,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBALC,eAMD;AAAA,iCAAG;AAAA,kCAAWL,KAAK,CAACM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBANC;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADJ;AA2BD;;AAEF,MAAM;AAACC,EAAAA;AAAD,IAAwBT,SAAS,EAAvC;AAEC,OAAO,eAAeU,kBAAf,CAAkCC,OAAlC,EAA+C;AAEjD,QAAM;AAACN,IAAAA;AAAD,MAAOM,OAAO,CAACC,KAArB;AAIH,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,8CAA6CT,EAAG,EAAlD,CAAvB;AACA,QAAMH,KAAK,GAAG,MAAMW,GAAG,CAACE,IAAJ,EAApB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,IAAAA;AAAD,GAAZ;AAEA,QAAMW,EAAE,GAAGd,KAAK,CAACe,MAAjB;AAMA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLhB,MAAAA;AADK;AADF,GAAP;AAMD;AAED,eAAeD,EAAf","sourcesContent":["import React, { ReactNode, useEffect, useState } from 'react';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport 'isomorphic-unfetch';\r\nimport getConfig from 'next/config'\r\n\r\ninterface IProps {\r\n    children: ReactNode;\r\n    // any other props that come into the component\r\n    posts: any\r\n  }\r\n  \r\nfunction Id({posts} : IProps) {\r\n\r\n   \r\nconsole.log(posts)\r\n    \r\n    \r\n    return (\r\n        <>\r\n\r\n        <Head>\r\n    <title>{}posts.title</title>\r\n        </Head>\r\n      \r\n        <div className=\"container   m-10 p-10\">\r\n      <ul className=\"ul list-disc list-inside\">\r\n        \r\n    <h1  className=\"text-5xl mb-5\">Post Body Details: </h1>\r\n     <b><p> Post Number : {posts.id}</p></b>\r\n     <b><p> Post Title : {posts.title}</p></b>\r\n     <b><p> Post Body : {posts.body}</p></b>\r\n     <b><p> User: {posts.userId}</p></b>\r\n\r\n        \r\n      </ul>\r\n\r\n      \r\n      \r\n      \r\n      \r\n      </div>\r\n      \r\n      </>\r\n    )\r\n  }\r\n  \r\n const {publicRuntimeConfig} = getConfig();\r\n\r\n  export async function getServerSideProps(context:any) {\r\n    \r\n       const {id} = context.query;\r\n\r\n\r\n    \r\n    const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n    const posts = await res.json()\r\n    console.log({id});\r\n\r\n    const ln = posts.lenght;\r\n\r\n    \r\n\r\n    \r\n  \r\n    return {\r\n      props: {\r\n        posts,\r\n        \r\n      },\r\n    }\r\n  }\r\n  \r\n  export default Id;"]},"metadata":{},"sourceType":"module"}